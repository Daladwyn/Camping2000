@using Microsoft.AspNet.Identity

@model Camping2000.Models.Booking

@if (Model.BookingNeedsElectricity == true)
{
    <div>
        <h2>Renting space for a caravan/trailer.</h2>
    </div>
}
else
{
    <div>
        <h2>Renting space for a tent.</h2>
    </div>
}
@if (Model.BookingId != 0)
{
    <div>Your booking have bookingid: @Model.BookingId</div>
}
@ViewBag.Errormessage
@using (Ajax.BeginForm("RentSpaceForTent", "Reservation", new AjaxOptions
{
    UpdateTargetId = "ContentBody",
    InsertionMode = InsertionMode.Replace,
}))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <div class="row">
            <div class="col-md-2">
                @Html.Label("Arrival date: ", new { @class="pull-right" })
            </div>
            <div class="col-md-3">
                <input type="date" id="BookingStartDate" name="BookingStartDate" value="@string.Format("{0:yyyy-MM-dd}", Model.BookingStartDate)" min="@string.Format("{0:yyyy-MM-dd}", DateTime.Now)" max="@string.Format("{0:yyyy-MM-dd}",Model.BookingStartDate.AddDays(365))" />
            </div>
            <div class="col-md-7">
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2">
                @Html.Label("Departure date: ", new { @class = "pull-right" })
            </div>
            <div class="col-md-3">
                <input type="date" id="BookingEndDate" name="BookingEndDate" value="@string.Format("{0:yyyy-MM-dd}", Model.BookingEndDate)" min="@string.Format("{0:yyyy-MM-dd}", DateTime.Now.AddDays(1))" max="@string.Format("{0:yyyy-MM-dd}",Model.BookingEndDate.AddDays(365))" />
            </div>
            <div class="col-md-7">
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2">
                @Html.Label("Number of guests: ", new { @class = "pull-right" })
            </div>
            <div class="col-md-3">
                @if ((Model.NumberOfGuests >= 1) && (Model.NumberOfGuests <= 10))
                {
                    <input type="number" name="NumberOfGuests" value="@Model.NumberOfGuests" min="1" max="10">
                }
                else
                {
                    <input type="number" name="NumberOfGuests" min="1" max="10">
                }
            </div>
            <div class="col-md-7">
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-2">
                @Html.Label("Do you need electricity: ", new { @class = "pull-right" })
            </div>
            <div class="col-md-2">
                @if (Model.BookingNeedsElectricity == true)
                {
                    <div>
                        <input type="radio" name="BookingNeedsElectricity" value="true" checked required /> Yes
                        <input type="radio" name="BookingNeedsElectricity" value="false" required /> No
                    </div>
                }
                else
                {
                    <div>
                        <input type="radio" name="BookingNeedsElectricity" value="true" required /> Yes
                        <input type="radio" name="BookingNeedsElectricity" value="false" checked required /> No
                    </div>
                }
            </div>
            <div class="col-md-4">
               @ViewBag.pricePerNight
            </div>
            <div class="col-md-4">

            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.Label("Price per night per person: ") @Model.BookingPrice
            </div>
            <div class="col-md-1">
               
                @Html.HiddenFor(b => b.BookingPrice, Model.BookingPrice)
            </div>
            <div class="col-md-2">
            </div>
            <div class="col-md-6">
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.HiddenFor(g => g.GuestId, User.Identity.GetUserId())
        @Html.HiddenFor(b => b.BookingId, Model.BookingId)
        <input type="submit" value="Reserve" class="btn btn-primary" />
    </div>
}